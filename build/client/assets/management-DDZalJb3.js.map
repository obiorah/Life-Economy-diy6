{"version":3,"file":"management-DDZalJb3.js","sources":["../../../app/routes/management.tsx"],"sourcesContent":["import type { MetaFunction } from \"@remix-run/node\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { cn } from \"~/lib/utils\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Management\" },\n    { name: \"description\", content: \"Manage the Life Economy system\" },\n  ];\n};\n\n// --- Icons ---\n\n// Define missing icons\nfunction CurrencyIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"8\" />\n      <line x1=\"3\" y1=\"3\" x2=\"21\" y2=\"21\" />\n    </svg>\n  );\n}\n\nfunction BehaviorIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M12 2a10 10 0 1 0 10 10\" />\n      <path d=\"m16 16-3-3-3 3\" />\n      <path d=\"m16 8 3 3-6 6\" />\n    </svg>\n  );\n}\n\nfunction EconomyIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"22\" />\n      <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n    </svg>\n  );\n}\n\nfunction PlusCircleIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"16\" />\n      <line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\" />\n    </svg>\n  );\n}\n\nfunction SearchIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"11\" cy=\"11\" r=\"8\" />\n      <path d=\"m21 21-4.3-4.3\" />\n    </svg>\n  );\n}\n\nfunction CheckCircleIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\n      <polyline points=\"22 4 12 14.01 9 11.01\" />\n    </svg>\n  );\n}\n\nfunction UserIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\n      <circle cx=\"12\" cy=\"7\" r=\"4\" />\n    </svg>\n  );\n}\n\nfunction UsersIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n      <circle cx=\"9\" cy=\"7\" r=\"4\" />\n      <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\" />\n      <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n    </svg>\n  );\n}\n\nfunction ThumbsUpIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M7 10v12\" />\n      <path d=\"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z\" />\n    </svg>\n  );\n}\n\nfunction ThumbsDownIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M17 14V2\" />\n      <path d=\"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22h0a3.13 3.13 0 0 1-3-3.88Z\" />\n    </svg>\n  );\n}\n\n// Icons for Economy Management Actions\nfunction EditIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n      <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n    </svg>\n  );\n}\n\nfunction Trash2Icon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M3 6h18\" />\n      <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n      <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n      <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n    </svg>\n  );\n}\n\nfunction ToggleLeftIcon(props: React.SVGProps<SVGSVGElement>) { // For Deactivate\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect>\n      <circle cx=\"8\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n}\n\nfunction ToggleRightIcon(props: React.SVGProps<SVGSVGElement>) { // For Activate\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <rect x=\"1\" y=\"5\" width=\"22\" height=\"14\" rx=\"7\" ry=\"7\"></rect>\n      <circle cx=\"16\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n  );\n}\n\nfunction XCircleIcon(props: React.SVGProps<SVGSVGElement>) { // For Unassign\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n      <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\n      <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\n    </svg>\n  );\n}\n\nfunction LinkIcon(props: React.SVGProps<SVGSVGElement>) { // For Assign\n  return (\n    <svg\n      {...props}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path>\n      <path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path>\n    </svg>\n  );\n}\n\n\n// --- Types ---\ntype Tab = \"currency\" | \"behavior\" | \"economy\";\ntype BehaviorActionType = \"reward\" | \"fine\";\ntype TargetType = \"user\" | \"group\";\ntype Frequency = \"One-time\" | \"Daily\" | \"Weekly\" | \"Monthly\";\ntype EconomySubTab = \"addActivity\" | \"addExpense\" | \"assignActivity\" | \"assignExpense\";\n\ninterface IssuanceRecord {\n  id: string;\n  timestamp: Date; // Keep as Date object, but initialize statically\n  amount: number;\n  reason: string;\n  issuedBy: string; // Placeholder for admin user\n}\n\ninterface BehaviorRecord {\n  id: string;\n  timestamp: Date; // Keep as Date object\n  actor: string; // Admin/Awarder/Finer\n  target: string; // User/Group Name or ID\n  targetType: TargetType;\n  amount: number;\n  reason: string;\n}\n\ninterface Activity {\n  id: string;\n  name: string;\n  description: string;\n  pay: number;\n  frequency: Frequency;\n  slots: number; // Renamed from 'slotsAvailable'\n  createdDate: Date; // Keep as Date object, but initialize statically\n  isActive: boolean; // For activate/deactivate\n}\n\ninterface Expense {\n  id: string;\n  name: string;\n  description: string;\n  cost: number;\n  frequency: Frequency;\n  createdDate: Date; // Keep as Date object\n  isActive: boolean; // For activate/deactivate\n}\n\ninterface ActivityAssignment {\n  id: string;\n  targetId: string; // User or Group ID\n  targetName: string; // User or Group Name\n  targetType: TargetType;\n  activityId: string;\n  activityName: string;\n  assignedDate: Date; // Keep as Date object\n  assignedBy: string; // Admin username/ID\n}\n\ninterface ExpenseAssignment {\n  id: string;\n  targetId: string; // User or Group ID\n  targetName: string; // User or Group Name\n  targetType: TargetType;\n  expenseId: string;\n  expenseName: string;\n  assignedDate: Date; // Keep as Date object\n  assignedBy: string; // Admin username/ID\n}\n\n\n// Mock Data (Replace with actual data fetching)\nconst MOCK_USERS = [\n  { id: \"user1\", name: \"Alice\" },\n  { id: \"user2\", name: \"Bob\" },\n  { id: \"user3\", name: \"Charlie\" },\n  { id: \"user4\", name: \"Diana\" },\n];\nconst MOCK_GROUPS = [\n  { id: \"groupA\", name: \"Developers\" },\n  { id: \"groupB\", name: \"Marketing\" },\n  { id: \"groupC\", name: \"Support Team\" },\n];\n\n// --- Currency Management Component ---\nfunction CurrencyManagementTab() {\n  // State for total balance (start with a mock value)\n  const [totalEssence, setTotalEssence] = useState<number>(1000000);\n  // State for issuance history (start with mock data using static dates)\n  const [issuanceHistory, setIssuanceHistory] = useState<IssuanceRecord[]>([\n    { id: \"1\", timestamp: new Date(\"2023-10-26T10:00:00Z\"), amount: 500000, reason: \"Initial Seed\", issuedBy: \"System\" },\n    { id: \"2\", timestamp: new Date(\"2023-10-27T11:30:00Z\"), amount: 500000, reason: \"Phase 1 Allocation\", issuedBy: \"Admin A\" },\n  ]);\n  // State for minting form\n  const [mintAmount, setMintAmount] = useState<string>(\"\");\n  const [mintReason, setMintReason] = useState<string>(\"\");\n  // State for history search filter\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const handleMintCurrency = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const amount = parseFloat(mintAmount);\n    if (isNaN(amount) || amount <= 0) {\n      alert(\"Please enter a valid positive amount to mint.\");\n      return;\n    }\n\n    const newRecord: IssuanceRecord = {\n      id: crypto.randomUUID(), // Simple unique ID for demo - OK in event handler\n      timestamp: new Date(), // OK in event handler\n      amount: amount,\n      reason: mintReason || \"Minted via console\",\n      issuedBy: \"Current Admin\", // Placeholder\n    };\n\n    setTotalEssence((prevTotal) => prevTotal + amount);\n    setIssuanceHistory((prevHistory) => [newRecord, ...prevHistory]); // Add to top\n\n    // Clear form\n    setMintAmount(\"\");\n    setMintReason(\"\");\n  };\n\n  const filteredHistory = useMemo(() => {\n    if (!searchTerm) {\n      return issuanceHistory;\n    }\n    const lowerCaseSearch = searchTerm.toLowerCase();\n    return issuanceHistory.filter(\n      (record) =>\n        record.reason.toLowerCase().includes(lowerCaseSearch) ||\n        record.issuedBy.toLowerCase().includes(lowerCaseSearch) ||\n        record.amount.toString().includes(lowerCaseSearch) ||\n        record.timestamp.toLocaleDateString().includes(lowerCaseSearch) ||\n        record.timestamp.toLocaleTimeString().includes(lowerCaseSearch)\n    );\n  }, [issuanceHistory, searchTerm]);\n\n  return (\n    <div className=\"p-4 border rounded-b-md dark:border-gray-700 space-y-6\">\n      {/* 1. Total Balance Display */}\n      <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground\">\n          Total ESSENCE in Circulation\n        </h3>\n        <div className=\"mt-2 text-3xl font-bold text-primary dark:text-primary\">\n          {totalEssence.toLocaleString()} <span className=\"text-xl font-medium text-muted-foreground dark:text-muted-foreground\">ESSENCE</span>\n        </div>\n      </div>\n\n      {/* 2. Currency Minting Section */}\n      <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n          Mint New ESSENCE\n        </h3>\n        <form onSubmit={handleMintCurrency} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"mintAmount\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n              Amount to Mint\n            </label>\n            <input\n              type=\"number\"\n              id=\"mintAmount\"\n              name=\"mintAmount\"\n              value={mintAmount}\n              onChange={(e) => setMintAmount(e.target.value)}\n              required\n              min=\"0.01\" // Or adjust as needed\n              step=\"any\"\n              className=\"input-style mt-1\" // Use class from tailwind.css\n              placeholder=\"e.g., 10000\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"mintReason\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n              Reason / Description (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"mintReason\"\n              name=\"mintReason\"\n              value={mintReason}\n              onChange={(e) => setMintReason(e.target.value)}\n              className=\"input-style mt-1\" // Use class from tailwind.css\n              placeholder=\"e.g., Monthly reward pool top-up\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\" // Use classes from tailwind.css\n          >\n            <PlusCircleIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n            Mint Currency\n          </button>\n        </form>\n      </div>\n\n      {/* 3. Issuance History Table */}\n      <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n        <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n          Issuance History\n        </h3>\n        {/* Search Input */}\n        <div className=\"mb-4 relative\">\n           <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n             <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n           </div>\n           <input\n             type=\"text\"\n             placeholder=\"Search history (reason, amount, date...)\"\n             value={searchTerm}\n             onChange={(e) => setSearchTerm(e.target.value)}\n             className=\"input-style block w-full pl-10 pr-3 py-2\" // Use class\n           />\n         </div>\n\n        {/* Table */}\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n            <thead className=\"bg-muted/50 dark:bg-muted/50\">\n              <tr>\n                <th scope=\"col\" className=\"th-style\"> {/* Use class */}\n                  Date / Time\n                </th>\n                <th scope=\"col\" className=\"th-style\"> {/* Use class */}\n                  Amount Issued\n                </th>\n                <th scope=\"col\" className=\"th-style\"> {/* Use class */}\n                  Reason / Description\n                </th>\n                <th scope=\"col\" className=\"th-style\"> {/* Use class */}\n                  Issued By\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n              {filteredHistory.length > 0 ? (\n                filteredHistory.map((record) => (\n                  <tr key={record.id}>\n                    <td className=\"td-style\"> {/* Use class */}\n                      {record.timestamp.toLocaleString()}\n                    </td>\n                    <td className=\"td-style font-medium\"> {/* Use class */}\n                      {record.amount.toLocaleString()}\n                    </td>\n                    <td className=\"td-style\"> {/* Use class */}\n                      {record.reason}\n                    </td>\n                    <td className=\"td-style\"> {/* Use class */}\n                      {record.issuedBy}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={4} className=\"px-6 py-4 text-center text-sm text-muted-foreground dark:text-muted-foreground\">\n                    {searchTerm ? \"No matching records found.\" : \"No issuance history yet.\"}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// --- Behavior Management Component ---\nfunction BehaviorManagementTab() {\n  // --- State ---\n  const [actionType, setActionType] = useState<BehaviorActionType>(\"reward\");\n  const [targetType, setTargetType] = useState<TargetType>(\"user\");\n  const [selectedTarget, setSelectedTarget] = useState<string>(\"\"); // Store ID or name\n  const [amount, setAmount] = useState<string>(\"\");\n  const [reason, setReason] = useState<string>(\"\");\n  const [showNotification, setShowNotification] = useState<boolean>(false); // Notification state\n  const [notificationMessage, setNotificationMessage] = useState<string>(\"\"); // Notification message state\n\n  // Mock history & fine account (replace with actual data/API calls)\n  const [rewardHistory, setRewardHistory] = useState<BehaviorRecord[]>([]);\n  const [fineHistory, setFineHistory] = useState<BehaviorRecord[]>([]);\n  const [fineAccountBalance, setFineAccountBalance] = useState<number>(500); // Mock starting balance\n  const [searchTermReward, setSearchTermReward] = useState<string>(\"\");\n  const [searchTermFine, setSearchTermFine] = useState<string>(\"\");\n\n  // --- Effects ---\n  // Effect to hide notification after a delay\n  useEffect(() => {\n    if (showNotification) {\n      const timer = setTimeout(() => {\n        setShowNotification(false);\n        setNotificationMessage(\"\"); // Clear message when hiding\n      }, 3000); // Hide after 3 seconds\n      return () => clearTimeout(timer); // Cleanup timer on unmount or if shown again\n    }\n  }, [showNotification]);\n\n  // --- Derived State / Memos ---\n  const targetOptions = useMemo(() => {\n    return targetType === \"user\" ? MOCK_USERS : MOCK_GROUPS;\n  }, [targetType]);\n\n  const filteredRewardHistory = useMemo(() => {\n    if (!searchTermReward) return rewardHistory;\n    const lowerSearch = searchTermReward.toLowerCase();\n    return rewardHistory.filter(\n      (r) =>\n        r.actor.toLowerCase().includes(lowerSearch) ||\n        r.target.toLowerCase().includes(lowerSearch) ||\n        r.reason.toLowerCase().includes(lowerSearch) ||\n        r.amount.toString().includes(lowerSearch) ||\n        r.timestamp.toLocaleString().toLowerCase().includes(lowerSearch)\n    );\n  }, [rewardHistory, searchTermReward]);\n\n  const filteredFineHistory = useMemo(() => {\n    if (!searchTermFine) return fineHistory;\n    const lowerSearch = searchTermFine.toLowerCase();\n    return fineHistory.filter(\n      (r) =>\n        r.actor.toLowerCase().includes(lowerSearch) ||\n        r.target.toLowerCase().includes(lowerSearch) ||\n        r.reason.toLowerCase().includes(lowerSearch) ||\n        r.amount.toString().includes(lowerSearch) ||\n        r.timestamp.toLocaleString().toLowerCase().includes(lowerSearch)\n    );\n  }, [fineHistory, searchTermFine]);\n\n  // --- Handlers ---\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const numericAmount = parseFloat(amount);\n\n    if (isNaN(numericAmount) || numericAmount <= 0) {\n      alert(\"Please enter a valid positive amount.\");\n      return;\n    }\n    if (!selectedTarget) {\n      alert(`Please select a ${targetType}.`);\n      return;\n    }\n    if (!reason.trim()) {\n      alert(\"Please provide a reason.\");\n      return;\n    }\n\n    const targetName = targetOptions.find(t => t.id === selectedTarget)?.name || selectedTarget; // Get name for display\n\n    const newRecord: BehaviorRecord = {\n      id: crypto.randomUUID(), // OK in event handler\n      timestamp: new Date(), // OK in event handler\n      actor: \"Current Admin\", // Placeholder\n      target: targetName,\n      targetType: targetType,\n      amount: numericAmount,\n      reason: reason,\n    };\n\n    let successMsg = \"\";\n    if (actionType === \"reward\") {\n      setRewardHistory((prev) => [newRecord, ...prev]);\n      successMsg = `Successfully rewarded ${targetName} with ${numericAmount.toLocaleString()} ESSENCE.`;\n      // TODO: Add actual reward logic (deduct from admin, add to target) via API call\n      console.log(\"Mock Reward:\", newRecord);\n    } else { // Fine\n      setFineHistory((prev) => [newRecord, ...prev]);\n      setFineAccountBalance((prev) => prev + numericAmount); // Add to fine account\n      successMsg = `Successfully fined ${targetName} ${numericAmount.toLocaleString()} ESSENCE.`;\n      // TODO: Add actual fine logic (deduct from target) via API call\n      console.log(\"Mock Fine:\", newRecord);\n    }\n\n    // Show notification\n    setNotificationMessage(successMsg);\n    setShowNotification(true);\n\n    // Clear form\n    setSelectedTarget(\"\");\n    setAmount(\"\");\n    setReason(\"\");\n  };\n\n  // --- Render ---\n  // Placeholder for permission check\n  const isAdmin = true; // Replace with actual permission logic\n  if (!isAdmin) {\n    return (\n      <div className=\"p-4 border rounded-b-md dark:border-gray-700\">\n        <p className=\"text-destructive dark:text-destructive-foreground\">Access Denied. You do not have permission to manage behavior.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 border rounded-b-md dark:border-gray-700 space-y-6 relative\"> {/* Added relative positioning for notification */}\n\n      {/* Success Notification */}\n      {showNotification && (\n        <div\n          className=\"fixed top-20 right-6 z-50 p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-100 dark:bg-green-900 dark:text-green-300 shadow-lg border border-green-300 dark:border-green-600\"\n          role=\"alert\"\n        >\n          <div className=\"flex items-center\">\n            <CheckCircleIcon className=\"flex-shrink-0 inline w-5 h-5 mr-3\" />\n            <span className=\"font-medium\">{notificationMessage}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Fine Account Balance Display (Moved Here) */}\n      <div className=\"bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700/50 shadow rounded-lg p-4\">\n          <h3 className=\"text-sm font-medium leading-6 text-yellow-800 dark:text-yellow-300\">\n            Central Fine Account Balance\n          </h3>\n          <div className=\"mt-1 text-xl font-bold text-yellow-900 dark:text-yellow-200\">\n            {fineAccountBalance.toLocaleString()} <span className=\"text-base font-medium text-yellow-700 dark:text-yellow-400\">ESSENCE</span>\n          </div>\n          <p className=\"mt-1 text-xs text-yellow-600 dark:text-yellow-400\">This balance increases when fines are issued.</p>\n      </div>\n\n      {/* Action Form Section */}\n      <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n        {/* 1. Reward/Fine Toggle */}\n        <div className=\"mb-6\">\n          <span className=\"text-lg font-medium text-card-foreground dark:text-card-foreground mr-4\">Action:</span>\n          <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n            <button\n              type=\"button\"\n              onClick={() => setActionType(\"reward\")}\n              className={cn(\n                \"inline-flex items-center px-4 py-2 text-sm font-medium border border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                actionType === \"reward\"\n                  ? \"bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300 z-10 ring-1 ring-green-500\"\n                  : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                \"rounded-l-lg\"\n              )}\n            >\n              <ThumbsUpIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n              Reward\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setActionType(\"fine\")}\n              className={cn(\n                \"inline-flex items-center px-4 py-2 text-sm font-medium border-t border-b border-r border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                 actionType === \"fine\"\n                  ? \"bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300 z-10 ring-1 ring-red-500\"\n                  : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                 \"rounded-r-md\" // Adjusted for two buttons\n              )}\n            >\n              <ThumbsDownIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n              Fine\n            </button>\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* 2. Target Type Toggle */}\n          <div>\n            <label className=\"block text-sm font-medium text-foreground dark:text-foreground mb-1\">Target Type</label>\n            <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                onClick={() => { setTargetType(\"user\"); setSelectedTarget(\"\"); }} // Reset selection on change\n                className={cn(\n                  \"inline-flex items-center px-4 py-2 text-sm font-medium border border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                  targetType === \"user\"\n                    ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                    : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                  \"rounded-l-lg\"\n                )}\n              >\n                <UserIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                Individual User\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => { setTargetType(\"group\"); setSelectedTarget(\"\"); }} // Reset selection on change\n                className={cn(\n                  \"inline-flex items-center px-4 py-2 text-sm font-medium border-t border-b border-r border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                  targetType === \"group\"\n                    ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                    : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                  \"rounded-r-md\"\n                )}\n              >\n                <UsersIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                Group\n              </button>\n            </div>\n          </div>\n\n          {/* 3. User/Group Selector */}\n          <div>\n            <label htmlFor=\"targetSelector\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n              Select {targetType === \"user\" ? \"User\" : \"Group\"}\n            </label>\n            {/* Basic Select - Replace with searchable dropdown component later */}\n            <select\n              id=\"targetSelector\"\n              name=\"targetSelector\"\n              value={selectedTarget}\n              onChange={(e) => setSelectedTarget(e.target.value)}\n              required\n              className=\"input-style mt-1\" // Use class\n            >\n              <option value=\"\" disabled>-- Select a {targetType} --</option>\n              {targetOptions.map((option) => (\n                <option key={option.id} value={option.id}>\n                  {option.name}\n                </option>\n              ))}\n            </select>\n             <p className=\"mt-1 text-xs text-muted-foreground dark:text-muted-foreground\">Note: This is a basic selector. A searchable dropdown will be implemented later.</p>\n          </div>\n\n          {/* 4. Amount */}\n          <div>\n            <label htmlFor=\"behaviorAmount\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n              Amount (ESSENCE)\n            </label>\n            <input\n              type=\"number\"\n              id=\"behaviorAmount\"\n              name=\"behaviorAmount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              required\n              min=\"0.01\"\n              step=\"any\"\n              className=\"input-style mt-1\" // Use class\n              placeholder={`Amount to ${actionType}`}\n            />\n          </div>\n\n          {/* 5. Reason */}\n          <div>\n            <label htmlFor=\"behaviorReason\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n              Reason\n            </label>\n            <textarea\n              id=\"behaviorReason\"\n              name=\"behaviorReason\"\n              rows={3}\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n              required\n              className=\"input-style mt-1\" // Use class\n              placeholder={`Reason for the ${actionType}...`}\n            />\n          </div>\n\n          {/* 6. Submit Button */}\n          <button\n            type=\"submit\"\n            className={cn(\n              \"btn\", // Use base btn class\n              actionType === 'reward'\n                ? \"bg-green-600 hover:bg-green-700 focus:ring-green-500 text-white\" // Keep specific colors\n                : \"bg-red-600 hover:bg-red-700 focus:ring-red-500 text-white\" // Keep specific colors\n            )}\n          >\n            {actionType === 'reward' ? <ThumbsUpIcon className=\"-ml-1 mr-2 h-5 w-5\" /> : <ThumbsDownIcon className=\"-ml-1 mr-2 h-5 w-5\" />}\n            {actionType === \"reward\" ? \"Reward\" : \"Fine\"} {targetType === \"user\" ? \"User\" : \"Group\"}\n          </button>\n        </form>\n      </div>\n\n      {/* History Tables Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Reward History Table */}\n        <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n            Reward History\n          </h3>\n          {/* Search Input */}\n          <div className=\"mb-4 relative\">\n             <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n               <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n             </div>\n             <input\n               type=\"text\"\n               placeholder=\"Search rewards...\"\n               value={searchTermReward}\n               onChange={(e) => setSearchTermReward(e.target.value)}\n               className=\"input-style block w-full pl-10 pr-3 py-2\" // Use class\n             />\n           </div>\n          {/* Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n              <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                <tr>\n                  <th scope=\"col\" className=\"th-style\">Date</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Awarder</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Recipient</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Amount</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Reason</th> {/* Use class */}\n                </tr>\n              </thead>\n              <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                {filteredRewardHistory.length > 0 ? (\n                  filteredRewardHistory.map((record) => (\n                    <tr key={record.id}>\n                      <td className=\"td-style text-muted-foreground\">{record.timestamp.toLocaleString()}</td> {/* Use class */}\n                      <td className=\"td-style\">{record.actor}</td> {/* Use class */}\n                      <td className=\"td-style\">{record.target} ({record.targetType})</td> {/* Use class */}\n                      <td className=\"td-style text-green-600 dark:text-green-400 font-medium\">+{record.amount.toLocaleString()}</td> {/* Use class */}\n                      <td className=\"td-style text-muted-foreground max-w-xs truncate\" title={record.reason}>{record.reason}</td> {/* Use class */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr><td colSpan={5} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">{searchTermReward ? \"No matching rewards found.\" : \"No reward history yet.\"}</td></tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Fine History Table */}\n        <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n            Fine History\n          </h3>\n           {/* Search Input */}\n          <div className=\"mb-4 relative\">\n             <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n               <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n             </div>\n             <input\n               type=\"text\"\n               placeholder=\"Search fines...\"\n               value={searchTermFine}\n               onChange={(e) => setSearchTermFine(e.target.value)}\n               className=\"input-style block w-full pl-10 pr-3 py-2\" // Use class\n             />\n           </div>\n          {/* Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n              <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                <tr>\n                  <th scope=\"col\" className=\"th-style\">Date</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Admin</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Fined Entity</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Amount</th> {/* Use class */}\n                  <th scope=\"col\" className=\"th-style\">Reason</th> {/* Use class */}\n                </tr>\n              </thead>\n              <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                 {filteredFineHistory.length > 0 ? (\n                  filteredFineHistory.map((record) => (\n                    <tr key={record.id}>\n                      <td className=\"td-style text-muted-foreground\">{record.timestamp.toLocaleString()}</td> {/* Use class */}\n                      <td className=\"td-style\">{record.actor}</td> {/* Use class */}\n                      <td className=\"td-style\">{record.target} ({record.targetType})</td> {/* Use class */}\n                      <td className=\"td-style text-red-600 dark:text-red-400 font-medium\">-{record.amount.toLocaleString()}</td> {/* Use class */}\n                      <td className=\"td-style text-muted-foreground max-w-xs truncate\" title={record.reason}>{record.reason}</td> {/* Use class */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr><td colSpan={5} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">{searchTermFine ? \"No matching fines found.\" : \"No fine history yet.\"}</td></tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// --- Economy Management Component ---\nfunction EconomyManagementTab() {\n  // --- State ---\n  const [activeSubTab, setActiveSubTab] = useState<EconomySubTab>(\"addActivity\");\n  const [showNotification, setShowNotification] = useState<boolean>(false);\n  const [notificationMessage, setNotificationMessage] = useState<string>(\"\");\n\n  // Mock Data (Replace with API calls - Use static dates)\n  const [activities, setActivities] = useState<Activity[]>([\n    { id: \"act1\", name: \"Daily Standup Report\", description: \"Submit daily progress report.\", pay: 50, frequency: \"Daily\", slots: 10, createdDate: new Date(\"2023-10-23T09:00:00Z\"), isActive: true },\n    { id: \"act2\", name: \"Code Review\", description: \"Review a peer's pull request.\", pay: 150, frequency: \"One-time\", slots: 5, createdDate: new Date(\"2023-10-25T14:00:00Z\"), isActive: true },\n    { id: \"act3\", name: \"Weekly Planning\", description: \"Participate in weekly team planning.\", pay: 200, frequency: \"Weekly\", slots: 15, createdDate: new Date(\"2023-10-21T10:00:00Z\"), isActive: false },\n  ]);\n  const [expenses, setExpenses] = useState<Expense[]>([\n    // Add some initial mock expenses if needed for testing\n    { id: \"exp1\", name: \"Monthly Software Subscription\", description: \"Fee for IDE license\", cost: 200, frequency: \"Monthly\", createdDate: new Date(\"2023-11-01T00:00:00Z\"), isActive: true },\n    { id: \"exp2\", name: \"Team Lunch Fund\", description: \"Contribution to weekly team lunch\", cost: 50, frequency: \"Weekly\", createdDate: new Date(\"2023-10-28T12:00:00Z\"), isActive: true },\n    { id: \"exp3\", name: \"Coffee Machine Maintenance\", description: \"Monthly upkeep\", cost: 75, frequency: \"Monthly\", createdDate: new Date(\"2023-10-15T08:00:00Z\"), isActive: false },\n  ]);\n  const [activityAssignments, setActivityAssignments] = useState<ActivityAssignment[]>([\n    // Add mock assignment for testing table\n    { id: \"assignAct1\", targetId: \"user1\", targetName: \"Alice\", targetType: \"user\", activityId: \"act1\", activityName: \"Daily Standup Report\", assignedDate: new Date(\"2023-11-05T10:00:00Z\"), assignedBy: \"Admin B\" },\n    { id: \"assignAct2\", targetId: \"groupA\", targetName: \"Developers\", targetType: \"group\", activityId: \"act2\", activityName: \"Code Review\", assignedDate: new Date(\"2023-11-06T11:00:00Z\"), assignedBy: \"Admin B\" },\n  ]);\n  const [expenseAssignments, setExpenseAssignments] = useState<ExpenseAssignment[]>([\n    // Add mock expense assignment for testing\n    { id: \"assignExp1\", targetId: \"user2\", targetName: \"Bob\", targetType: \"user\", expenseId: \"exp1\", expenseName: \"Monthly Software Subscription\", assignedDate: new Date(\"2023-11-02T09:30:00Z\"), assignedBy: \"Admin A\" },\n    { id: \"assignExp2\", targetId: \"groupA\", targetName: \"Developers\", targetType: \"group\", expenseId: \"exp2\", expenseName: \"Team Lunch Fund\", assignedDate: new Date(\"2023-11-03T13:00:00Z\"), assignedBy: \"Admin A\" },\n  ]);\n\n  // Form State - Add Activity\n  const [activityName, setActivityName] = useState(\"\");\n  const [activityDesc, setActivityDesc] = useState(\"\");\n  const [activityPay, setActivityPay] = useState(\"\");\n  const [activityFreq, setActivityFreq] = useState<Frequency>(\"One-time\");\n  const [activitySlots, setActivitySlots] = useState(\"\");\n\n  // Form State - Add Expense\n  const [expenseName, setExpenseName] = useState(\"\");\n  const [expenseDesc, setExpenseDesc] = useState(\"\");\n  const [expenseCost, setExpenseCost] = useState(\"\");\n  const [expenseFreq, setExpenseFreq] = useState<Frequency>(\"One-time\");\n\n  // Form State - Assign Activity\n  const [assignActivityTargetType, setAssignActivityTargetType] = useState<TargetType>(\"user\");\n  const [selectedAssignActivityTarget, setSelectedAssignActivityTarget] = useState<string>(\"\"); // User/Group ID\n  const [selectedActivityId, setSelectedActivityId] = useState<string>(\"\"); // Activity ID\n\n  // Form State - Assign Expense\n  const [assignExpenseTargetType, setAssignExpenseTargetType] = useState<TargetType>(\"user\");\n  const [selectedAssignExpenseTarget, setSelectedAssignExpenseTarget] = useState<string>(\"\"); // User/Group ID\n  const [selectedExpenseId, setSelectedExpenseId] = useState<string>(\"\"); // Expense ID\n\n  // Table State\n  const [activitySearchTerm, setActivitySearchTerm] = useState(\"\");\n  const [expenseSearchTerm, setExpenseSearchTerm] = useState(\"\");\n  const [activityAssignmentSearchTerm, setActivityAssignmentSearchTerm] = useState(\"\");\n  const [expenseAssignmentSearchTerm, setExpenseAssignmentSearchTerm] = useState(\"\"); // New search term for expense assignments\n\n  // --- Effects ---\n  useEffect(() => {\n    if (showNotification) {\n      const timer = setTimeout(() => {\n        setShowNotification(false);\n        setNotificationMessage(\"\");\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [showNotification]);\n\n  // --- Handlers ---\n  const handleShowNotification = (message: string) => {\n    setNotificationMessage(message);\n    setShowNotification(true);\n  };\n\n  // Activity Handlers\n  const handleAddActivity = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const pay = parseFloat(activityPay);\n    const slots = parseInt(activitySlots, 10);\n\n    if (!activityName.trim() || !activityDesc.trim()) {\n        alert(\"Please fill in Activity Name and Description.\");\n        return;\n    }\n    if (isNaN(pay) || pay <= 0) {\n        alert(\"Please enter a valid positive Pay amount.\");\n        return;\n    }\n     if (isNaN(slots) || slots <= 0) {\n        alert(\"Please enter a valid positive number for Slots Available.\");\n        return;\n    }\n\n    const newActivity: Activity = {\n        id: crypto.randomUUID(), // OK in event handler\n        name: activityName.trim(),\n        description: activityDesc.trim(),\n        pay: pay,\n        frequency: activityFreq,\n        slots: slots,\n        createdDate: new Date(), // OK in event handler\n        isActive: true, // Default to active\n    };\n\n    setActivities(prev => [newActivity, ...prev]);\n    handleShowNotification(`Activity '${newActivity.name}' created successfully.`);\n    console.log(`[Admin Action] Activity Created: ${newActivity.name} by Current Admin`); // Logging Placeholder\n\n    // Clear form\n    setActivityName(\"\");\n    setActivityDesc(\"\");\n    setActivityPay(\"\");\n    setActivityFreq(\"One-time\");\n    setActivitySlots(\"\");\n  };\n\n  const handleEditActivity = (id: string) => console.log(\"Edit Activity:\", id); // Placeholder\n  const handleDeleteActivity = (id: string) => {\n    const activityToDelete = activities.find(act => act.id === id);\n    if (!activityToDelete) return;\n\n    if (window.confirm(`Are you sure you want to delete the activity '${activityToDelete.name}'? This cannot be undone.`)) {\n        setActivities(prev => prev.filter(act => act.id !== id));\n        // Also remove any assignments related to this activity\n        setActivityAssignments(prev => prev.filter(assign => assign.activityId !== id));\n        handleShowNotification(`Activity '${activityToDelete.name}' deleted and unassigned.`);\n        console.log(`[Admin Action] Activity Deleted: ${activityToDelete.name} (ID: ${id}) by Current Admin`); // Logging Placeholder\n    }\n  };\n  const handleToggleActivityStatus = (id: string) => {\n    let activityName = \"\";\n    let newStatus = false;\n    setActivities(prev =>\n        prev.map(act => {\n            if (act.id === id) {\n                activityName = act.name;\n                newStatus = !act.isActive;\n                return { ...act, isActive: newStatus };\n            }\n            return act;\n        })\n    );\n    handleShowNotification(`Activity '${activityName}' status updated to ${newStatus ? 'Active' : 'Inactive'}.`);\n    console.log(`[Admin Action] Activity Status Toggled: ${activityName} (ID: ${id}) to ${newStatus ? 'Active' : 'Inactive'} by Current Admin`); // Logging Placeholder\n  };\n\n  // Expense Handlers\n  const handleAddExpense = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const cost = parseFloat(expenseCost);\n\n    if (!expenseName.trim() || !expenseDesc.trim()) {\n        alert(\"Please fill in Expense Name and Description.\");\n        return;\n    }\n    if (isNaN(cost) || cost <= 0) {\n        alert(\"Please enter a valid positive Cost amount.\");\n        return;\n    }\n\n    const newExpense: Expense = {\n        id: crypto.randomUUID(), // OK in event handler\n        name: expenseName.trim(),\n        description: expenseDesc.trim(),\n        cost: cost,\n        frequency: expenseFreq,\n        createdDate: new Date(), // OK in event handler\n        isActive: true, // Default to active\n    };\n\n    setExpenses(prev => [newExpense, ...prev]);\n    handleShowNotification(`Expense '${newExpense.name}' added successfully.`);\n    console.log(`[Admin Action] Expense Created: ${newExpense.name} by Current Admin`); // Logging Placeholder\n\n    // Clear form\n    setExpenseName(\"\");\n    setExpenseDesc(\"\");\n    setExpenseCost(\"\");\n    setExpenseFreq(\"One-time\");\n  };\n\n  const handleEditExpense = (id: string) => console.log(\"Edit Expense:\", id); // Placeholder\n  const handleDeleteExpense = (id: string) => {\n     const expenseToDelete = expenses.find(exp => exp.id === id);\n     if (!expenseToDelete) return;\n\n     if (window.confirm(`Are you sure you want to delete the expense '${expenseToDelete.name}'? This cannot be undone.`)) {\n        setExpenses(prev => prev.filter(exp => exp.id !== id));\n        // Also remove any assignments related to this expense\n        setExpenseAssignments(prev => prev.filter(assign => assign.expenseId !== id));\n        handleShowNotification(`Expense '${expenseToDelete.name}' deleted and unassigned.`);\n        console.log(`[Admin Action] Expense Deleted: ${expenseToDelete.name} (ID: ${id}) by Current Admin`); // Logging Placeholder\n    }\n  };\n  const handleToggleExpenseStatus = (id: string) => {\n    let expenseName = \"\";\n    let newStatus = false;\n    setExpenses(prev =>\n        prev.map(exp => {\n            if (exp.id === id) {\n                expenseName = exp.name;\n                newStatus = !exp.isActive;\n                return { ...exp, isActive: newStatus };\n            }\n            return exp;\n        })\n    );\n    handleShowNotification(`Expense '${expenseName}' status updated to ${newStatus ? 'Active' : 'Inactive'}.`);\n    console.log(`[Admin Action] Expense Status Toggled: ${expenseName} (ID: ${id}) to ${newStatus ? 'Active' : 'Inactive'} by Current Admin`); // Logging Placeholder\n  };\n\n  // Activity Assignment Handlers\n  const handleAssignActivity = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedAssignActivityTarget) {\n        alert(`Please select a ${assignActivityTargetType}.`);\n        return;\n    }\n    if (!selectedActivityId) {\n        alert(\"Please select an activity to assign.\");\n        return;\n    }\n\n    const targetList = assignActivityTargetType === 'user' ? MOCK_USERS : MOCK_GROUPS;\n    const target = targetList.find(t => t.id === selectedAssignActivityTarget);\n    const activity = activities.find(a => a.id === selectedActivityId);\n\n    if (!target || !activity) {\n        alert(\"Selected target or activity not found.\"); // Should not happen with proper dropdowns\n        return;\n    }\n\n    // Check if this exact assignment already exists\n    const alreadyAssigned = activityAssignments.some(\n        assign => assign.targetId === target.id && assign.activityId === activity.id\n    );\n    if (alreadyAssigned) {\n        alert(`${activity.name} is already assigned to ${target.name}.`);\n        return;\n    }\n\n    const newAssignment: ActivityAssignment = {\n        id: crypto.randomUUID(), // OK in event handler\n        targetId: target.id,\n        targetName: target.name,\n        targetType: assignActivityTargetType,\n        activityId: activity.id,\n        activityName: activity.name,\n        assignedDate: new Date(), // OK in event handler\n        assignedBy: \"Current Admin\", // Placeholder\n    };\n\n    setActivityAssignments(prev => [newAssignment, ...prev]);\n    handleShowNotification(`Activity '${activity.name}' assigned to ${target.name}.`);\n    console.log(`[Admin Action] Activity Assigned: '${activity.name}' to ${target.name} (${assignActivityTargetType}) by Current Admin`); // Logging Placeholder\n\n    // Clear form\n    setSelectedAssignActivityTarget(\"\");\n    setSelectedActivityId(\"\");\n    // Keep assignActivityTargetType as is, user might want to assign more to the same type\n  };\n\n  const handleUnassignActivity = (assignmentId: string) => {\n    const assignment = activityAssignments.find(a => a.id === assignmentId);\n    if (!assignment) return;\n\n    if (window.confirm(`Are you sure you want to unassign '${assignment.activityName}' from '${assignment.targetName}'?`)) {\n        setActivityAssignments(prev => prev.filter(a => a.id !== assignmentId));\n        handleShowNotification(\"Activity unassigned successfully.\");\n        console.log(`[Admin Action] Activity Unassigned: '${assignment.activityName}' from ${assignment.targetName} (ID: ${assignmentId}) by Current Admin`); // Logging Placeholder\n    }\n  };\n\n  // Expense Assignment Handlers (NEW)\n  const handleAssignExpense = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedAssignExpenseTarget) {\n        alert(`Please select a ${assignExpenseTargetType}.`);\n        return;\n    }\n    if (!selectedExpenseId) {\n        alert(\"Please select an expense to assign.\");\n        return;\n    }\n\n    const targetList = assignExpenseTargetType === 'user' ? MOCK_USERS : MOCK_GROUPS;\n    const target = targetList.find(t => t.id === selectedAssignExpenseTarget);\n    const expense = expenses.find(e => e.id === selectedExpenseId);\n\n    if (!target || !expense) {\n        alert(\"Selected target or expense not found.\");\n        return;\n    }\n\n    // Check if this exact assignment already exists\n    const alreadyAssigned = expenseAssignments.some(\n        assign => assign.targetId === target.id && assign.expenseId === expense.id\n    );\n    if (alreadyAssigned) {\n        alert(`${expense.name} is already assigned to ${target.name}.`);\n        return;\n    }\n\n    const newAssignment: ExpenseAssignment = {\n        id: crypto.randomUUID(), // OK in event handler\n        targetId: target.id,\n        targetName: target.name,\n        targetType: assignExpenseTargetType,\n        expenseId: expense.id,\n        expenseName: expense.name,\n        assignedDate: new Date(), // OK in event handler\n        assignedBy: \"Current Admin\", // Placeholder\n    };\n\n    setExpenseAssignments(prev => [newAssignment, ...prev]);\n    handleShowNotification(`Expense '${expense.name}' assigned to ${target.name}.`);\n    console.log(`[Admin Action] Expense Assigned: '${expense.name}' to ${target.name} (${assignExpenseTargetType}) by Current Admin`); // Logging Placeholder\n\n    // Clear form\n    setSelectedAssignExpenseTarget(\"\");\n    setSelectedExpenseId(\"\");\n    // Keep assignExpenseTargetType as is\n  };\n\n  const handleUnassignExpense = (assignmentId: string) => {\n    const assignment = expenseAssignments.find(a => a.id === assignmentId);\n    if (!assignment) return;\n\n    if (window.confirm(`Are you sure you want to unassign '${assignment.expenseName}' from '${assignment.targetName}'?`)) {\n        setExpenseAssignments(prev => prev.filter(a => a.id !== assignmentId));\n        handleShowNotification(\"Expense unassigned successfully.\");\n        console.log(`[Admin Action] Expense Unassigned: '${assignment.expenseName}' from ${assignment.targetName} (ID: ${assignmentId}) by Current Admin`); // Logging Placeholder\n    }\n  };\n\n\n  // --- Filtering & Derived Data ---\n  const filteredActivities = useMemo(() => {\n    if (!activitySearchTerm) return activities;\n    const lowerSearch = activitySearchTerm.toLowerCase();\n    return activities.filter(act =>\n        act.name.toLowerCase().includes(lowerSearch) ||\n        act.description.toLowerCase().includes(lowerSearch) ||\n        act.pay.toString().includes(lowerSearch) ||\n        act.frequency.toLowerCase().includes(lowerSearch) ||\n        act.slots.toString().includes(lowerSearch) ||\n        act.createdDate.toLocaleDateString().includes(lowerSearch)\n    );\n  }, [activities, activitySearchTerm]);\n\n  const filteredExpenses = useMemo(() => {\n    if (!expenseSearchTerm) return expenses;\n    const lowerSearch = expenseSearchTerm.toLowerCase();\n    return expenses.filter(exp =>\n        exp.name.toLowerCase().includes(lowerSearch) ||\n        exp.description.toLowerCase().includes(lowerSearch) ||\n        exp.cost.toString().includes(lowerSearch) ||\n        exp.frequency.toLowerCase().includes(lowerSearch) ||\n        exp.createdDate.toLocaleDateString().includes(lowerSearch)\n    );\n  }, [expenses, expenseSearchTerm]);\n\n  // Options for Assign Activity form\n  const assignActivityTargetOptions = useMemo(() => {\n    return assignActivityTargetType === \"user\" ? MOCK_USERS : MOCK_GROUPS;\n  }, [assignActivityTargetType]);\n\n  const activeActivities = useMemo(() => {\n    return activities.filter(act => act.isActive);\n  }, [activities]);\n\n  const filteredActivityAssignments = useMemo(() => {\n    if (!activityAssignmentSearchTerm) return activityAssignments;\n    const lowerSearch = activityAssignmentSearchTerm.toLowerCase();\n    return activityAssignments.filter(assign =>\n        assign.targetName.toLowerCase().includes(lowerSearch) ||\n        assign.activityName.toLowerCase().includes(lowerSearch) ||\n        assign.assignedBy.toLowerCase().includes(lowerSearch) ||\n        assign.assignedDate.toLocaleString().toLowerCase().includes(lowerSearch) ||\n        assign.targetType.toLowerCase().includes(lowerSearch)\n    );\n  }, [activityAssignments, activityAssignmentSearchTerm]);\n\n  // Options for Assign Expense form (NEW)\n  const assignExpenseTargetOptions = useMemo(() => {\n    return assignExpenseTargetType === \"user\" ? MOCK_USERS : MOCK_GROUPS;\n  }, [assignExpenseTargetType]);\n\n  const activeExpenses = useMemo(() => {\n    return expenses.filter(exp => exp.isActive);\n  }, [expenses]);\n\n  const filteredExpenseAssignments = useMemo(() => {\n    if (!expenseAssignmentSearchTerm) return expenseAssignments;\n    const lowerSearch = expenseAssignmentSearchTerm.toLowerCase();\n    return expenseAssignments.filter(assign =>\n        assign.targetName.toLowerCase().includes(lowerSearch) ||\n        assign.expenseName.toLowerCase().includes(lowerSearch) ||\n        assign.assignedBy.toLowerCase().includes(lowerSearch) ||\n        assign.assignedDate.toLocaleString().toLowerCase().includes(lowerSearch) ||\n        assign.targetType.toLowerCase().includes(lowerSearch)\n    );\n  }, [expenseAssignments, expenseAssignmentSearchTerm]);\n\n\n  // --- Render Logic ---\n  const renderSubTabContent = () => {\n    switch (activeSubTab) {\n      case \"addActivity\":\n        return (\n          <div className=\"space-y-6\">\n            {/* Add Activity Form */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Create New Activity\n              </h3>\n              <form onSubmit={handleAddActivity} className=\"space-y-4\">\n                {/* Form Fields */}\n                <div>\n                  <label htmlFor=\"activityName\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Activity Name</label>\n                  <input type=\"text\" id=\"activityName\" value={activityName} onChange={e => setActivityName(e.target.value)} required className=\"mt-1 block w-full input-style\" />\n                </div>\n                <div>\n                  <label htmlFor=\"activityDesc\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Description</label>\n                  <textarea id=\"activityDesc\" value={activityDesc} onChange={e => setActivityDesc(e.target.value)} required rows={3} className=\"mt-1 block w-full input-style\" />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div>\n                        <label htmlFor=\"activityPay\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Pay (ESSENCE)</label>\n                        <input type=\"number\" id=\"activityPay\" value={activityPay} onChange={e => setActivityPay(e.target.value)} required min=\"0.01\" step=\"any\" className=\"mt-1 block w-full input-style\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"activityFreq\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Payment Frequency</label>\n                        <select id=\"activityFreq\" value={activityFreq} onChange={e => setActivityFreq(e.target.value as Frequency)} required className=\"mt-1 block w-full input-style\">\n                            <option value=\"One-time\">One-time</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"activitySlots\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Slots Available</label>\n                        <input type=\"number\" id=\"activitySlots\" value={activitySlots} onChange={e => setActivitySlots(e.target.value)} required min=\"1\" step=\"1\" className=\"mt-1 block w-full input-style\" />\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  <PlusCircleIcon className=\"-ml-1 mr-2 h-5 w-5\" /> Add Activity\n                </button>\n              </form>\n            </div>\n\n            {/* Activities Table */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Existing Activities\n              </h3>\n              {/* Search Input */}\n              <div className=\"mb-4 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search activities...\"\n                  value={activitySearchTerm}\n                  onChange={(e) => setActivitySearchTerm(e.target.value)}\n                  className=\"input-style block w-full pl-10 pr-3 py-2\" // Use class\n                />\n              </div>\n              {/* Table */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n                  <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                    <tr>\n                      <th className=\"th-style\">Name</th>\n                      <th className=\"th-style\">Description</th>\n                      <th className=\"th-style text-right\">Pay</th>\n                      <th className=\"th-style\">Frequency</th>\n                      <th className=\"th-style text-center\">Slots</th>\n                      <th className=\"th-style\">Created</th>\n                      <th className=\"th-style text-center\">Status</th>\n                      <th className=\"th-style text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                    {filteredActivities.length > 0 ? (\n                      filteredActivities.map((act) => (\n                        <tr key={act.id}>\n                          <td className=\"td-style font-medium\">{act.name}</td>\n                          <td className=\"td-style max-w-sm truncate\" title={act.description}>{act.description}</td>\n                          <td className=\"td-style text-right\">{act.pay.toLocaleString()}</td>\n                          <td className=\"td-style\">{act.frequency}</td>\n                          <td className=\"td-style text-center\">{act.slots}</td>\n                          <td className=\"td-style\">{act.createdDate.toLocaleDateString()}</td>\n                          <td className=\"td-style text-center\">\n                             <span className={cn(\n                                \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\",\n                                act.isActive ? \"bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300\" : \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                             )}>\n                               {act.isActive ? \"Active\" : \"Inactive\"}\n                             </span>\n                          </td>\n                          <td className=\"td-style text-center\">\n                            <div className=\"flex justify-center items-center space-x-2\">\n                               <button onClick={() => handleEditActivity(act.id)} className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\" title=\"Edit\">\n                                 <EditIcon className=\"h-4 w-4\" />\n                               </button>\n                               <button onClick={() => handleToggleActivityStatus(act.id)} className={cn(\"hover:text-opacity-80\", act.isActive ? \"text-yellow-600 dark:text-yellow-400\" : \"text-green-600 dark:text-green-400\")} title={act.isActive ? \"Deactivate\" : \"Activate\"}>\n                                 {act.isActive ? <ToggleLeftIcon className=\"h-4 w-4\" /> : <ToggleRightIcon className=\"h-4 w-4\" />}\n                               </button>\n                               <button onClick={() => handleDeleteActivity(act.id)} className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\" title=\"Delete\">\n                                 <Trash2Icon className=\"h-4 w-4\" />\n                               </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={8} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">\n                          {activitySearchTerm ? \"No matching activities found.\" : \"No activities created yet.\"}\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n      case \"addExpense\":\n        return (\n          <div className=\"space-y-6\">\n            {/* Add Expense Form */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Define New Expense\n              </h3>\n              <form onSubmit={handleAddExpense} className=\"space-y-4\">\n                {/* Form Fields */}\n                <div>\n                  <label htmlFor=\"expenseName\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Expense Name</label>\n                  <input type=\"text\" id=\"expenseName\" value={expenseName} onChange={e => setExpenseName(e.target.value)} required className=\"mt-1 block w-full input-style\" />\n                </div>\n                <div>\n                  <label htmlFor=\"expenseDesc\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Description</label>\n                  <textarea id=\"expenseDesc\" value={expenseDesc} onChange={e => setExpenseDesc(e.target.value)} required rows={3} className=\"mt-1 block w-full input-style\" />\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                        <label htmlFor=\"expenseCost\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Cost (ESSENCE)</label>\n                        <input type=\"number\" id=\"expenseCost\" value={expenseCost} onChange={e => setExpenseCost(e.target.value)} required min=\"0.01\" step=\"any\" className=\"mt-1 block w-full input-style\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"expenseFreq\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">Expense Frequency</label>\n                        <select id=\"expenseFreq\" value={expenseFreq} onChange={e => setExpenseFreq(e.target.value as Frequency)} required className=\"mt-1 block w-full input-style\">\n                            <option value=\"One-time\">One-time</option>\n                            <option value=\"Daily\">Daily</option>\n                            <option value=\"Weekly\">Weekly</option>\n                            <option value=\"Monthly\">Monthly</option>\n                        </select>\n                    </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  <PlusCircleIcon className=\"-ml-1 mr-2 h-5 w-5\" /> Add Expense\n                </button>\n              </form>\n            </div>\n\n            {/* Expenses Table */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Existing Expenses\n              </h3>\n              {/* Search Input */}\n              <div className=\"mb-4 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search expenses...\"\n                  value={expenseSearchTerm}\n                  onChange={(e) => setExpenseSearchTerm(e.target.value)}\n                  className=\"input-style block w-full pl-10 pr-3 py-2\" // Use class\n                />\n              </div>\n              {/* Table */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n                  <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                    <tr>\n                      <th className=\"th-style\">Name</th>\n                      <th className=\"th-style\">Description</th>\n                      <th className=\"th-style text-right\">Cost</th>\n                      <th className=\"th-style\">Frequency</th>\n                      <th className=\"th-style\">Created</th>\n                      <th className=\"th-style text-center\">Status</th>\n                      <th className=\"th-style text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                    {filteredExpenses.length > 0 ? (\n                      filteredExpenses.map((exp) => (\n                        <tr key={exp.id}>\n                          <td className=\"td-style font-medium\">{exp.name}</td>\n                          <td className=\"td-style max-w-sm truncate\" title={exp.description}>{exp.description}</td>\n                          <td className=\"td-style text-right text-red-600 dark:text-red-400\">{exp.cost.toLocaleString()}</td>\n                          <td className=\"td-style\">{exp.frequency}</td>\n                          <td className=\"td-style\">{exp.createdDate.toLocaleDateString()}</td>\n                          <td className=\"td-style text-center\">\n                             <span className={cn(\n                                \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\",\n                                exp.isActive ? \"bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300\" : \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                             )}>\n                               {exp.isActive ? \"Active\" : \"Inactive\"}\n                             </span>\n                          </td>\n                          <td className=\"td-style text-center\">\n                            <div className=\"flex justify-center items-center space-x-2\">\n                               <button onClick={() => handleEditExpense(exp.id)} className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\" title=\"Edit\">\n                                 <EditIcon className=\"h-4 w-4\" />\n                               </button>\n                               <button onClick={() => handleToggleExpenseStatus(exp.id)} className={cn(\"hover:text-opacity-80\", exp.isActive ? \"text-yellow-600 dark:text-yellow-400\" : \"text-green-600 dark:text-green-400\")} title={exp.isActive ? \"Deactivate\" : \"Activate\"}>\n                                 {exp.isActive ? <ToggleLeftIcon className=\"h-4 w-4\" /> : <ToggleRightIcon className=\"h-4 w-4\" />}\n                               </button>\n                               <button onClick={() => handleDeleteExpense(exp.id)} className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\" title=\"Delete\">\n                                 <Trash2Icon className=\"h-4 w-4\" />\n                               </button>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={7} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">\n                          {expenseSearchTerm ? \"No matching expenses found.\" : \"No expenses defined yet.\"}\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n      case \"assignActivity\":\n        return (\n          <div className=\"space-y-6\">\n            {/* Assign Activity Form */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Assign Activity\n              </h3>\n              <form onSubmit={handleAssignActivity} className=\"space-y-4\">\n                {/* Target Type Toggle */}\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground dark:text-foreground mb-1\">Assign To</label>\n                  <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n                    <button\n                      type=\"button\"\n                      onClick={() => { setAssignActivityTargetType(\"user\"); setSelectedAssignActivityTarget(\"\"); }} // Reset selection\n                      className={cn(\n                        \"inline-flex items-center px-4 py-2 text-sm font-medium border border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                        assignActivityTargetType === \"user\"\n                          ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                          : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                        \"rounded-l-lg\"\n                      )}\n                    >\n                      <UserIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                      Individual User\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => { setAssignActivityTargetType(\"group\"); setSelectedAssignActivityTarget(\"\"); }} // Reset selection\n                      className={cn(\n                        \"inline-flex items-center px-4 py-2 text-sm font-medium border-t border-b border-r border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                        assignActivityTargetType === \"group\"\n                          ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                          : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                        \"rounded-r-md\"\n                      )}\n                    >\n                      <UsersIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                      Group\n                    </button>\n                  </div>\n                </div>\n\n                {/* User/Group Selector */}\n                <div>\n                  <label htmlFor=\"assignActivityTargetSelector\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n                    Select {assignActivityTargetType === \"user\" ? \"User\" : \"Group\"}\n                  </label>\n                  {/* Basic Select - Replace with searchable dropdown component later */}\n                  <select\n                    id=\"assignActivityTargetSelector\"\n                    name=\"assignActivityTargetSelector\"\n                    value={selectedAssignActivityTarget}\n                    onChange={(e) => setSelectedAssignActivityTarget(e.target.value)}\n                    required\n                    className=\"input-style mt-1\"\n                  >\n                    <option value=\"\" disabled>-- Select a {assignActivityTargetType} --</option>\n                    {assignActivityTargetOptions.map((option) => (\n                      <option key={option.id} value={option.id}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </select>\n                  <p className=\"mt-1 text-xs text-muted-foreground dark:text-muted-foreground\">Note: This is a basic selector. A searchable dropdown will be implemented later.</p>\n                </div>\n\n                {/* Activity Selector */}\n                <div>\n                  <label htmlFor=\"assignActivitySelector\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n                    Select Activity\n                  </label>\n                  <select\n                    id=\"assignActivitySelector\"\n                    name=\"assignActivitySelector\"\n                    value={selectedActivityId}\n                    onChange={(e) => setSelectedActivityId(e.target.value)}\n                    required\n                    className=\"input-style mt-1\"\n                  >\n                    <option value=\"\" disabled>-- Select an active activity --</option>\n                    {activeActivities.length > 0 ? (\n                      activeActivities.map((activity) => (\n                        <option key={activity.id} value={activity.id}>\n                          {activity.name} (Pay: {activity.pay}, Freq: {activity.frequency})\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\" disabled>No active activities available</option>\n                    )}\n                  </select>\n                </div>\n\n                {/* Submit Button */}\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  <LinkIcon className=\"-ml-1 mr-2 h-5 w-5\" /> Assign Activity\n                </button>\n              </form>\n            </div>\n\n            {/* Activity Assignments Table */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Current Activity Assignments\n              </h3>\n              {/* Search Input */}\n              <div className=\"mb-4 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search assignments (user, group, activity...)\"\n                  value={activityAssignmentSearchTerm}\n                  onChange={(e) => setActivityAssignmentSearchTerm(e.target.value)}\n                  className=\"input-style block w-full pl-10 pr-3 py-2\"\n                />\n              </div>\n              {/* Table */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n                  <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                    <tr>\n                      <th className=\"th-style\">User/Group Name</th>\n                      <th className=\"th-style\">Activity Name</th>\n                      <th className=\"th-style\">Assigned Date</th>\n                      <th className=\"th-style\">Assigned By</th>\n                      <th className=\"th-style text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                    {filteredActivityAssignments.length > 0 ? (\n                      filteredActivityAssignments.map((assign) => (\n                        <tr key={assign.id}>\n                          <td className=\"td-style font-medium\">{assign.targetName} ({assign.targetType})</td>\n                          <td className=\"td-style\">{assign.activityName}</td>\n                          <td className=\"td-style\">{assign.assignedDate.toLocaleString()}</td>\n                          <td className=\"td-style\">{assign.assignedBy}</td>\n                          <td className=\"td-style text-center\">\n                            <button\n                              onClick={() => handleUnassignActivity(assign.id)}\n                              className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300 inline-flex items-center px-2 py-1 text-xs font-medium rounded border border-red-300 dark:border-red-600 hover:bg-red-50 dark:hover:bg-red-900/30\"\n                              title=\"Unassign\"\n                            >\n                              <XCircleIcon className=\"h-4 w-4 mr-1\" /> Unassign\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">\n                          {activityAssignmentSearchTerm ? \"No matching assignments found.\" : \"No activities assigned yet.\"}\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n      case \"assignExpense\": // NEW SECTION\n        return (\n          <div className=\"space-y-6\">\n            {/* Assign Expense Form */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Assign Expense\n              </h3>\n              <form onSubmit={handleAssignExpense} className=\"space-y-4\">\n                {/* Target Type Toggle */}\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground dark:text-foreground mb-1\">Assign To</label>\n                  <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n                    <button\n                      type=\"button\"\n                      onClick={() => { setAssignExpenseTargetType(\"user\"); setSelectedAssignExpenseTarget(\"\"); }} // Reset selection\n                      className={cn(\n                        \"inline-flex items-center px-4 py-2 text-sm font-medium border border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                        assignExpenseTargetType === \"user\"\n                          ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                          : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                        \"rounded-l-lg\"\n                      )}\n                    >\n                      <UserIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                      Individual User\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => { setAssignExpenseTargetType(\"group\"); setSelectedAssignExpenseTarget(\"\"); }} // Reset selection\n                      className={cn(\n                        \"inline-flex items-center px-4 py-2 text-sm font-medium border-t border-b border-r border-input dark:border-input focus:z-10 focus:ring-2 focus:ring-ring focus:border-primary dark:focus:ring-offset-background\",\n                        assignExpenseTargetType === \"group\"\n                          ? \"bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300 z-10 ring-1 ring-blue-500\"\n                          : \"bg-background text-foreground hover:bg-muted/50 dark:bg-background dark:text-foreground dark:hover:bg-muted/50\",\n                        \"rounded-r-md\"\n                      )}\n                    >\n                      <UsersIcon className=\"-ml-1 mr-2 h-5 w-5\" />\n                      Group\n                    </button>\n                  </div>\n                </div>\n\n                {/* User/Group Selector */}\n                <div>\n                  <label htmlFor=\"assignExpenseTargetSelector\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n                    Select {assignExpenseTargetType === \"user\" ? \"User\" : \"Group\"}\n                  </label>\n                  {/* Basic Select - Replace with searchable dropdown component later */}\n                  <select\n                    id=\"assignExpenseTargetSelector\"\n                    name=\"assignExpenseTargetSelector\"\n                    value={selectedAssignExpenseTarget}\n                    onChange={(e) => setSelectedAssignExpenseTarget(e.target.value)}\n                    required\n                    className=\"input-style mt-1\"\n                  >\n                    <option value=\"\" disabled>-- Select a {assignExpenseTargetType} --</option>\n                    {assignExpenseTargetOptions.map((option) => (\n                      <option key={option.id} value={option.id}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </select>\n                  <p className=\"mt-1 text-xs text-muted-foreground dark:text-muted-foreground\">Note: This is a basic selector. A searchable dropdown will be implemented later.</p>\n                </div>\n\n                {/* Expense Selector */}\n                <div>\n                  <label htmlFor=\"assignExpenseSelector\" className=\"block text-sm font-medium text-foreground dark:text-foreground\">\n                    Select Expense\n                  </label>\n                  <select\n                    id=\"assignExpenseSelector\"\n                    name=\"assignExpenseSelector\"\n                    value={selectedExpenseId}\n                    onChange={(e) => setSelectedExpenseId(e.target.value)}\n                    required\n                    className=\"input-style mt-1\"\n                  >\n                    <option value=\"\" disabled>-- Select an active expense --</option>\n                    {activeExpenses.length > 0 ? (\n                      activeExpenses.map((expense) => (\n                        <option key={expense.id} value={expense.id}>\n                          {expense.name} (Cost: {expense.cost}, Freq: {expense.frequency})\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\" disabled>No active expenses available</option>\n                    )}\n                  </select>\n                </div>\n\n                {/* Submit Button */}\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  <LinkIcon className=\"-ml-1 mr-2 h-5 w-5\" /> Assign Expense\n                </button>\n              </form>\n            </div>\n\n            {/* Expense Assignments Table */}\n            <div className=\"bg-card dark:bg-card shadow rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium leading-6 text-card-foreground dark:text-card-foreground mb-4\">\n                Current Expense Assignments\n              </h3>\n              {/* Search Input */}\n              <div className=\"mb-4 relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <SearchIcon className=\"h-5 w-5 text-muted-foreground\" aria-hidden=\"true\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search assignments (user, group, expense...)\"\n                  value={expenseAssignmentSearchTerm}\n                  onChange={(e) => setExpenseAssignmentSearchTerm(e.target.value)}\n                  className=\"input-style block w-full pl-10 pr-3 py-2\"\n                />\n              </div>\n              {/* Table */}\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-border dark:divide-border\">\n                  <thead className=\"bg-muted/50 dark:bg-muted/50\">\n                    <tr>\n                      <th className=\"th-style\">User/Group Name</th>\n                      <th className=\"th-style\">Expense Name</th>\n                      <th className=\"th-style\">Assigned Date</th>\n                      <th className=\"th-style\">Assigned By</th>\n                      <th className=\"th-style text-center\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-card dark:bg-card divide-y divide-border dark:divide-border\">\n                    {filteredExpenseAssignments.length > 0 ? (\n                      filteredExpenseAssignments.map((assign) => (\n                        <tr key={assign.id}>\n                          <td className=\"td-style font-medium\">{assign.targetName} ({assign.targetType})</td>\n                          <td className=\"td-style\">{assign.expenseName}</td>\n                          <td className=\"td-style\">{assign.assignedDate.toLocaleString()}</td>\n                          <td className=\"td-style\">{assign.assignedBy}</td>\n                          <td className=\"td-style text-center\">\n                            <button\n                              onClick={() => handleUnassignExpense(assign.id)}\n                              className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300 inline-flex items-center px-2 py-1 text-xs font-medium rounded border border-red-300 dark:border-red-600 hover:bg-red-50 dark:hover:bg-red-900/30\"\n                              title=\"Unassign\"\n                            >\n                              <XCircleIcon className=\"h-4 w-4 mr-1\" /> Unassign\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-muted-foreground\">\n                          {expenseAssignmentSearchTerm ? \"No matching assignments found.\" : \"No expenses assigned yet.\"}\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Placeholder for permission check\n  const isAdmin = true; // Replace with actual permission logic\n  if (!isAdmin) {\n    return (\n      <div className=\"p-4 border rounded-b-md dark:border-gray-700\">\n        <p className=\"text-destructive dark:text-destructive-foreground\">Access Denied. You do not have permission to manage the economy.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 border rounded-b-md dark:border-gray-700 space-y-6 relative\">\n       {/* Success Notification */}\n       {showNotification && (\n        <div\n          className=\"fixed top-20 right-6 z-50 p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-100 dark:bg-green-900 dark:text-green-300 shadow-lg border border-green-300 dark:border-green-600\"\n          role=\"alert\"\n        >\n          <div className=\"flex items-center\">\n            <CheckCircleIcon className=\"flex-shrink-0 inline w-5 h-5 mr-3\" />\n            <span className=\"font-medium\">{notificationMessage}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Sub-tab Navigation */}\n      <div className=\"border-b border-border dark:border-border\">\n        <nav className=\"-mb-px flex space-x-6 overflow-x-auto\" aria-label=\"Tabs\">\n          <button\n            onClick={() => setActiveSubTab(\"addActivity\")}\n            className={cn(\n              \"whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm\",\n              activeSubTab === \"addActivity\"\n                ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n                : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n            )}\n          >\n            Add Activity\n          </button>\n          <button\n            onClick={() => setActiveSubTab(\"addExpense\")}\n            className={cn(\n              \"whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm\",\n              activeSubTab === \"addExpense\"\n                ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n                : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n            )}\n          >\n            Add Expense\n          </button>\n          <button\n            onClick={() => setActiveSubTab(\"assignActivity\")}\n            className={cn(\n              \"whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm\",\n              activeSubTab === \"assignActivity\"\n                ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n                : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n            )}\n          >\n            Assign Activity\n          </button>\n           <button\n            onClick={() => setActiveSubTab(\"assignExpense\")}\n            className={cn(\n              \"whitespace-nowrap py-3 px-1 border-b-2 font-medium text-sm\",\n              activeSubTab === \"assignExpense\"\n                ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n                : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n            )}\n          >\n            Assign Expense\n          </button>\n        </nav>\n      </div>\n\n      {/* Sub-tab Content */}\n      <div className=\"mt-4\">\n        {renderSubTabContent()}\n      </div>\n    </div>\n  );\n}\n\n\n// --- Main Management Component ---\nexport default function Management() {\n  const [activeTab, setActiveTab] = useState<Tab>(\"currency\");\n\n  // Client-side only state to prevent hydration mismatch for initial tab\n  const [isClient, setIsClient] = useState(false);\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n\n  const renderContent = () => {\n    // Avoid rendering tab content on the server or before hydration,\n    // especially if initial state relies on potentially mismatched values.\n    // Or, ensure initial state is *always* identical server/client.\n    // For now, let's delay rendering content until client-side mount.\n    if (!isClient) {\n       // Optionally return a placeholder or null during SSR/hydration phase\n       // This helps if the initial state calculation is complex or differs.\n       // However, fixing the initial state (like we did with dates) is the better approach.\n       // We keep this `isClient` check as an extra safety measure for now.\n       return null;\n    }\n\n    switch (activeTab) {\n      case \"currency\":\n        return <CurrencyManagementTab />;\n      case \"behavior\":\n        return <BehaviorManagementTab />;\n      case \"economy\":\n        return <EconomyManagementTab />; // Use the new component\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl font-semibold mb-6\">Management Console</h1>\n\n      <div className=\"flex border-b border-border dark:border-border\">\n        <button\n          onClick={() => setActiveTab(\"currency\")}\n          className={cn(\n            \"flex items-center gap-2 px-4 py-3 -mb-px border-b-2 text-sm font-medium focus:outline-none\",\n            activeTab === \"currency\"\n              ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n              : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n          )}\n        >\n          <CurrencyIcon className=\"h-5 w-5\" />\n          Currency\n        </button>\n        <button\n          onClick={() => setActiveTab(\"behavior\")}\n          className={cn(\n            \"flex items-center gap-2 px-4 py-3 -mb-px border-b-2 text-sm font-medium focus:outline-none\",\n            activeTab === \"behavior\"\n              ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n              : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n          )}\n        >\n          <BehaviorIcon className=\"h-5 w-5\" />\n          Behavior\n        </button>\n        <button\n          onClick={() => setActiveTab(\"economy\")}\n          className={cn(\n            \"flex items-center gap-2 px-4 py-3 -mb-px border-b-2 text-sm font-medium focus:outline-none\",\n            activeTab === \"economy\"\n              ? \"border-primary text-primary dark:border-primary dark:text-primary\"\n              : \"border-transparent text-muted-foreground hover:text-foreground hover:border-border dark:hover:text-foreground dark:hover:border-border\"\n          )}\n        >\n          <EconomyIcon className=\"h-5 w-5\" />\n          Economy\n        </button>\n      </div>\n\n      <div className=\"mt-0\"> {/* Content area below tabs */}\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n"],"names":["meta","title","name","content","CurrencyIcon","props","jsxs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","children","jsx","cx","cy","r","x1","y1","x2","y2","BehaviorIcon","d","EconomyIcon","PlusCircleIcon","SearchIcon","CheckCircleIcon","points","UserIcon","UsersIcon","ThumbsUpIcon","ThumbsDownIcon","EditIcon","Trash2Icon","ToggleLeftIcon","x","y","rx","ry","ToggleRightIcon","XCircleIcon","LinkIcon","MOCK_USERS","id","MOCK_GROUPS","CurrencyManagementTab","totalEssence","setTotalEssence","useState","issuanceHistory","setIssuanceHistory","timestamp","Date","amount","reason","issuedBy","mintAmount","setMintAmount","mintReason","setMintReason","searchTerm","setSearchTerm","handleMintCurrency","event","preventDefault","parseFloat","isNaN","alert","newRecord","crypto","randomUUID","prevTotal","prevHistory","filteredHistory","useMemo","lowerCaseSearch","toLowerCase","filter","record","includes","toString","toLocaleDateString","toLocaleTimeString","className","toLocaleString","onSubmit","htmlFor","type","value","onChange","e","target","required","min","step","placeholder","scope","length","map","colSpan","BehaviorManagementTab","actionType","setActionType","targetType","setTargetType","selectedTarget","setSelectedTarget","setAmount","setReason","showNotification","setShowNotification","notificationMessage","setNotificationMessage","rewardHistory","setRewardHistory","fineHistory","setFineHistory","fineAccountBalance","setFineAccountBalance","searchTermReward","setSearchTermReward","searchTermFine","setSearchTermFine","useEffect","timer","setTimeout","clearTimeout","targetOptions","filteredRewardHistory","lowerSearch","actor","filteredFineHistory","handleSubmit","numericAmount","trim","targetName","find","t","successMsg","prev","console","log","role","onClick","cn","disabled","option","rows","EconomyManagementTab","activeSubTab","setActiveSubTab","activities","setActivities","description","pay","frequency","slots","createdDate","isActive","expenses","setExpenses","cost","activityAssignments","setActivityAssignments","targetId","activityId","activityName","assignedDate","assignedBy","expenseAssignments","setExpenseAssignments","expenseId","expenseName","setActivityName","activityDesc","setActivityDesc","activityPay","setActivityPay","activityFreq","setActivityFreq","activitySlots","setActivitySlots","setExpenseName","expenseDesc","setExpenseDesc","expenseCost","setExpenseCost","expenseFreq","setExpenseFreq","assignActivityTargetType","setAssignActivityTargetType","selectedAssignActivityTarget","setSelectedAssignActivityTarget","selectedActivityId","setSelectedActivityId","assignExpenseTargetType","setAssignExpenseTargetType","selectedAssignExpenseTarget","setSelectedAssignExpenseTarget","selectedExpenseId","setSelectedExpenseId","activitySearchTerm","setActivitySearchTerm","expenseSearchTerm","setExpenseSearchTerm","activityAssignmentSearchTerm","setActivityAssignmentSearchTerm","expenseAssignmentSearchTerm","setExpenseAssignmentSearchTerm","handleShowNotification","message","handleAddActivity","parseInt","newActivity","handleEditActivity","handleDeleteActivity","activityToDelete","act","window","confirm","assign","handleToggleActivityStatus","newStatus","handleAddExpense","newExpense","handleEditExpense","handleDeleteExpense","expenseToDelete","exp","handleToggleExpenseStatus","handleAssignActivity","activity","a","some","newAssignment","handleUnassignActivity","assignmentId","assignment","handleAssignExpense","expense","handleUnassignExpense","filteredActivities","filteredExpenses","assignActivityTargetOptions","activeActivities","filteredActivityAssignments","assignExpenseTargetOptions","activeExpenses","filteredExpenseAssignments","renderSubTabContent","Management","activeTab","setActiveTab","isClient","setIsClient","renderContent"],"mappings":"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"}